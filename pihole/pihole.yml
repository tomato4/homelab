apiVersion: v1
kind: Namespace
metadata:
  name: pihole
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-config
  namespace: pihole
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      volumes:
        - name: pihole-config
          persistentVolumeClaim:
            claimName: pihole-config
      containers:
        - name: pihole
          image: pihole/pihole:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 53
              name: dns-udp
              protocol: UDP
            - containerPort: 53
              name: dns-tcp
              protocol: TCP
            - containerPort: 80
              name: http
          env:
            - name: WEBPASSWORD
              value: "MZ4t#3Je5R*#6Tks"
          volumeMounts:
            - name: pihole-config
              mountPath: /etc/pihole
---
apiVersion: v1
kind: Service
metadata:
  name: pihole
  namespace: pihole
spec:
  type: LoadBalancer
  selector:
    app: pihole
  ports:
    - name: dns-udp
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole-ingress
  namespace: pihole
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - host: pihole.server
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: pihole
                port:
                  number: 80
