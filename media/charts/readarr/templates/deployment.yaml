apiVersion: apps/v1
kind: Deployment
metadata:
  name: readarr-books-{{ .Values.instanceName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: readarr-books-{{ .Values.instanceName }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.global.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: readarr-books-{{ .Values.instanceName }}
  template:
    metadata:
      labels:
        app: readarr-books-{{ .Values.instanceName }}
    spec:
      containers:
        - name: readarr
          image: {{ .Values.apps.readarr.image }}:{{ .Values.apps.readarr.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
{{/*          ports:*/}}
{{/*            - containerPort: 8787*/}}
          env:
            - name: PUID
              value: "{{ .Values.global.user.uid }}"
            - name: PGID
              value: "{{ .Values.global.user.gid }}"
            - name: TZ
              value: "{{ .Values.global.timezone }}"
          volumeMounts:
            - name: config
              mountPath: /config
              subPath: {{ .Values.instanceName }}
{{/*            - name: media*/}}
{{/*              mountPath: /movies*/}}
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: config-readarr-books-pvc
{{/*        - name: media*/}}
{{/*          persistentVolumeClaim:*/}}
{{/*              claimName: media-pvc*/}}
